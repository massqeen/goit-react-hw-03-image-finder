{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.js","components/Container/Container.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","api/images-api.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","onLoadMore","id","type","className","styles","button","onClick","Container","children","ImageGalleryItem","urlPreview","urlFull","tags","openModal","onSetImgData","item","src","alt","image","ImageGallery","images","gallery","map","img","key","webformatURL","largeImageURL","fetchImages","searchQuery","page","pageSize","fetch","then","res","json","hits","totalHits","length","Error","propTypes","PropTypes","string","isRequired","number","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","backdrop","content","Component","Searchbar","state","query","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","bar","form","label","input","autoComplete","autoFocus","placeholder","onChange","override","css","Spinner","loading","size","color","React","App","totalImages","error","largeImageUrl","modalImgTags","showModal","scrollToBottom","scrollTo","top","documentElement","scrollHeight","behavior","imagesApi","prevState","catch","finally","handleSearchFormSubmit","setModalImgData","toggleModal","prevProps","snapshot","message","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb17a859.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Searchbar_bar__hMWCH\",\"form\":\"Searchbar_form__2bDYb\",\"button\":\"Searchbar_button__3qkVQ\",\"label\":\"Searchbar_label__3G9h0\",\"input\":\"Searchbar_input__3HYIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__2eeHG\",\"image\":\"ImageGalleryItem_image__1C_wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__22F3F\",\"content\":\"Modal_content__3sqph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__YskiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1eVQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__22JmB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ onLoadMore }) => (\n  <button\n    id=\"loadMore\"\n    type=\"button\"\n    className={styles.button}\n    onClick={() => onLoadMore()}\n  >\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\nContainer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n};\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  urlPreview = 'http://placehold.it/600x400',\n  urlFull = 'http://placehold.it/600x400',\n  tags = '',\n  openModal,\n  onSetImgData,\n}) => {\n  return (\n    <li className={styles.item}>\n      <img\n        src={urlPreview}\n        alt={tags}\n        className={styles.image}\n        onClick={() => {\n          onSetImgData({ urlFull, tags });\n          openModal();\n        }}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  urlPreview: PropTypes.string.isRequired,\n  urlFull: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  openModal: PropTypes.func.isRequired,\n  onSetImgData: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, openModal, onSetImgData }) => {\n  return (\n    <ul className={styles.gallery}>\n      {images.map((img) => (\n        <ImageGalleryItem\n          key={img.id}\n          urlPreview={img.webformatURL}\n          urlFull={img.largeImageURL}\n          tags={img.tags}\n          openModal={openModal}\n          onSetImgData={onSetImgData}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n  onSetImgData: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nconst API_KEY = '18257903-4453e2975e3dd917fd04b41f9';\n\nconst fetchImages = ({ searchQuery = '', page = 1, pageSize = 12 }) => {\n  return fetch(\n    `https://pixabay.com/api/?key=${API_KEY}&q=${searchQuery}&per_page=${pageSize}&page=${page}\n      &image_type=photo&orientation=horizontal`\n  )\n    .then((res) => res.json())\n    .then(({ hits: images, totalHits }) => {\n      if (!images.length) {\n        throw new Error('Unfortunately, your request not found.');\n      }\n      return { totalHits, images };\n    });\n};\n\nfetchImages.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n};\n\nexport default { fetchImages };\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={styles.backdrop} onClick={this.handleBackdropClick}>\n        <div className={styles.content}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport styles from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = (e) => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.bar}>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.button}>\n            <span className={styles.label}>Search</span>\n          </button>\n          <input\n            className={styles.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport PacmanLoader from 'react-spinners/PacmanLoader';\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nclass Spinner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"sweet-loading\">\n        <PacmanLoader\n          css={override}\n          size={32}\n          color={'#303f9f'}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\nexport default Spinner;\n","import React, { Component } from 'react';\nimport Button from './components/Button/Button';\nimport Container from './components/Container/Container';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport imagesApi from './api/images-api';\nimport Modal from './components/Modal/Modal';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Spinner from './components/Spinner';\n\nclass App extends Component {\n  state = {\n    images: [],\n    totalImages: null,\n    loading: false,\n    error: null,\n    searchQuery: 'nature',\n    page: 1,\n    largeImageUrl: null,\n    modalImgTags: null,\n    showModal: false,\n  };\n\n  componentDidMount() {\n    this.fetchImages();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    imagesApi\n      .fetchImages({ searchQuery, page })\n      .then(({ totalHits, images }) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n          totalImages: totalHits,\n        }));\n        if (page !== 1) {\n          this.scrollToBottom();\n        }\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchFormSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n      error: false,\n    });\n  };\n\n  setModalImgData = ({ urlFull, tags }) => {\n    this.setState({ largeImageUrl: urlFull, modalImgTags: tags });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const {\n      totalImages,\n      images,\n      loading,\n      error,\n      showModal,\n      largeImageUrl,\n      modalImgTags,\n    } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n\n        {error && <p>{`Whoops, something went wrong. ${error.message}`}</p>}\n\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            openModal={this.toggleModal}\n            onSetImgData={this.setModalImgData}\n          />\n        )}\n\n        {loading && <Spinner />}\n\n        {images.length > 0 && !loading && totalImages > images.length && (\n          <Button onLoadMore={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageUrl} alt={modalImgTags} />\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}